<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flrjcx.xypt.mapper.ManageUserMapper">
    <sql id="allManagerInfo">
        manager_id,
        nick_name,
        nick_pic,
        manager_account,
        manager_password
    </sql>

    <sql id="allUserInfo">
        user_id,
        nick_name,
        nick_pic,
        content,
        sex,
        birthday,
        phone,
        email,
        account,
        password,
        balance,
        fans_num,
        focus_num,
        address,
        school,
        create_time,
        update_time,
        status,
        privacy_setting,
        ban_reason
    </sql>

    <sql id="manageUserInfo">
        user_id,
        nick_name,
        nick_pic,
        content,
        account,
        sex,
        birthday,
        phone,
        email,
        create_time
    </sql>
    <insert id="impowerUser">
        insert into impower (impower_id,impower_user_id) VALUES (#{impower.impowerId},#{impower.impowerUserId})
    </insert>
    <delete id="cancelImpowerUser">
        delete from impower where impower_user_id = #{userId}
    </delete>

    <select id="getUserList" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
        <include refid="allUserInfo"/>
        from users order by create_time DESC
    </select>

    <select id="getUserListByStatus" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
        <include refid="allUserInfo"/>
        from users
        where status = 1 or status = 2
    </select>

    <select id="getUserListByRegisterTime" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
        <include refid="manageUserInfo"/>
        from users
        <where>
            <if test="begin != null and begin !=''">
                <![CDATA[
                    and create_time >= #{begin}
                ]]>
            </if>
            <if test="end != null and end !=''">
                <![CDATA[
                    and create_time <= #{end}
                ]]>
            </if>
        </where>
    </select>

    <select id="getUserInfo" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
            <include refid="allUserInfo"></include>
        from users
        where user_id = #{userId}
    </select>

    <update id="updateUser">
        update users
        <trim prefix="set" suffixOverrides=",">
            <if test="nickName != null"> nick_name = #{nickName}, </if>
            <if test="nickPic != null"> nick_pic = #{nickPic}, </if>
            <if test="content != null"> content = #{content}, </if>
            <if test="sex != null"> sex = #{sex}, </if>
            <if test="birthday != null"> birthday = #{birthday}, </if>
            <if test="phone != null"> phone = #{phone}, </if>
            <if test="email != null"> email = #{email}, </if>
            <if test="account != null"> account = #{account}, </if>
            <if test="password != null"> password = #{password}, </if>
            <if test="balance != null"> balance = #{balance}, </if>
            <if test="fansNum != null"> fans_num = #{fansNum}, </if>
            <if test="focusNum != null"> focus_num = #{focusNum}, </if>
            <if test="address != null"> address = #{address}, </if>
            <if test="school != null"> school = #{school}, </if>
            <if test="createTime != null"> create_time = #{createTime}, </if>
            <if test="updateTime != null"> update_time = #{updateTime}, </if>
            <if test="status != null"> status = #{status}, </if>
            <if test="privacySetting != null"> privacy_setting = #{privacySetting} </if>
        </trim>
        where user_id = #{userId}
    </update>

    <update id="deleteUser">
        update users
        set status = 2,
        ban_reason = #{banReason}
        where user_id = #{userId}
    </update>
    <update id="rescindUser">
        update users set status = 1,
         ban_reason = null
         where user_id = #{userId}
    </update>

    <select id="findByNickNameOrAccount" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
        <include refid="manageUserInfo"></include>
        from users
        <where>
            <if test="nickName != null">
                nick_name like concat('%',#{account},'%')
                or account like concat('%',#{account},'%')
            </if>
        </where>
    </select>
    <select id="getUserListByStatusNotNull" resultType="com.flrjcx.xypt.common.model.param.common.Users">
        select
        <include refid="allUserInfo"/>
        from users
        where status = #{status}
    </select>
    <select id="selectImpowerUser" resultType="com.flrjcx.xypt.common.model.param.bbs.Impower">
        select
        impower_id as impowerId,
        impower_user_id as impowerUserId,
        create_time as createTime,
        update_time as updateTime
        from impower
    </select>
</mapper>
